@model ETicket.Models.Securitys

@{
    ViewBag.Title = "CreateEdit";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
    ActionService.RowId = Model.Id;
    List<SelectListItem> UserList = new List<SelectListItem>();
    using (ListItemData listData = new ListItemData())
    {
        UserList = listData.UserList();
    }
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.RoleNo)
        @Html.HiddenFor(model => model.ModuleNo)
        @Html.HiddenFor(model => model.PrgNo)

        <div class="row form-group">
            @Html.LabelFor(model => model.TargetNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.TargetNo, UserList, new { @class = "form-control selectpicker", data_live_search = "true" })
                @Html.ValidationMessageFor(model => model.TargetNo, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row form-group">
            @Html.LabelFor(model => model.IsAdd, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsAdd)
                    @Html.ValidationMessageFor(model => model.IsAdd, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row form-group">
            @Html.LabelFor(model => model.IsEdit, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsEdit)
                    @Html.ValidationMessageFor(model => model.IsEdit, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row form-group">
            @Html.LabelFor(model => model.IsDelete, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsDelete)
                    @Html.ValidationMessageFor(model => model.IsDelete, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row form-group">
            @Html.LabelFor(model => model.IsConfirm, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsConfirm)
                    @Html.ValidationMessageFor(model => model.IsConfirm, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row form-group">
            @Html.LabelFor(model => model.IsUndo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsUndo)
                    @Html.ValidationMessageFor(model => model.IsUndo, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row form-group">
            @Html.LabelFor(model => model.IsInvalid, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsInvalid)
                    @Html.ValidationMessageFor(model => model.IsInvalid, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row form-group">
            @Html.LabelFor(model => model.IsUpload, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsUpload)
                    @Html.ValidationMessageFor(model => model.IsUpload, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row form-group">
            @Html.LabelFor(model => model.IsDownload, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsDownload)
                    @Html.ValidationMessageFor(model => model.IsDownload, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row form-group">
            @Html.LabelFor(model => model.IsPrint, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsPrint)
                    @Html.ValidationMessageFor(model => model.IsPrint, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row form-group">
            @Html.LabelFor(model => model.Remark, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Remark, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger" })
            </div>
        </div>
        <hr />
        <div class="row form-group">
            <div class="col-md-12">
                @Html.Partial("~/Views/PartialViews/_PartialFormSumit.cshtml")
            </div>
        </div>
    </div>
}